- name: Setup kubernetes
  hosts: final
  become: yes
  tasks:
    - name: allow '$USER' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'tiffany ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the user
      authorized_key: user=tiffany key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io

    - name: Add user to docker group
      user:
        name: tiffany
        group: docker

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - kubelet 
        - kubeadm 
        - kubectl

    - name: Deploy Docker daemon.json.
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json
    
    - name: Restart docker
      service:
        name: docker
        daemon_reload: yes
        state: restarted 

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
      - swap
      - none

    - name: Disable swap
      command: "{{ item }}"
      with_items:
      - swapoff -a
      - swapon -s        

    - name: Initialize the Kubernetes cluster using kubeadm
      command: "{{ item }}"
      with_items:
      - kubeadm reset
      - kubeadm init

    - name: Setup kubeconfig for user
      command: "{{ item }}"
      with_items:
      - mkdir -p $HOME/.kube
      - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      - chown $(id -u):$(id -g) $HOME/.kube/config

